# SERVER
# there can be multiple server blocks

server {

# LISTEN DIRECTIVE
# If no listen directive is given, default is port 8080;

	# listen directive with only a port
	listen 9090;

	# listen directive with multiple ports
	listen 12300 9203;

	# listen directie with IP address
	listen 192.5.2.6;

	#listen directive with IP and port
	listen 0.0.0.0:9010;


# SERVER NAME (optional)
# if no server_name directive is given, server names are ignored
	server_name foo.org www.foo.org;


# ALLOWED_METHODS (server scope)
# acts as a fallback for if it is not defined at location level

	allowed_methods GET POST;


# ERROR PAGES (only at server level)
# Overrides the default error pages that are hardcoded

	# a single error code + html file
	error_page 404 not_found.html;

	# multiple error codes + html file for all
	error_page 400 401 402 403 err_40x.html;

# AUTOINDEX
# default = off

	autoindex off;


# INDEX
# sets index pages to search for

	# sets the "default" for a directory to test.html
	# if not found, searches for index.html (if also not found error page)
	index test.html index.html;


# ROOT
# the root to serve files from

	root /website/html;


# CLIENT_MAX_BODY_SIZE
# restricts size of post body (default 1mb)
# no postfix char = bytes
# 1k = KB's
# 1m = MB's

	client_max_body_size 250;


# LOCATION
# At least 1 location block is required and at least a '/' matching block is required
# syntax: location {match_path} { nested_directives }

	location / {

		# can contain these directives (see server block for explanation):
		# allowed_methods
		# autoindex
		# index
		# root
		# client_max_body_size

		# can also contain these extra directives:

		# RETURN
		# defines that this location redirects to a different location
		# syntax: return {status_code} {uri}
		return 301 /test/;

	}

}
